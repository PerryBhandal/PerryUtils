**** Compile vim from source

https://github.com/Valloric/YouCompleteMe/wiki/Building-Vim-from-source

Few notes about this:
- In step 3, do everything EXCLUDING make VIMRUNTIMEDIR (and beyond). You'll do checkinstall there.
- Use checkinstall instead of make (so replace sudo make install with sudo checkinstall).
- Do not do any of the update-alternatives stuff and beyond. The above handles setting up gvim and vim, and you can handle file associations on a per-extension basis.

** *** Install Vundle plugin manager

git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vim

**** Install YCM auto completion

1) Ensure development tools and cmake are installed (sudo apt-get install build-essential cmake)
2) Have python headers installed (sudo apt-get install python-dev)
3) Compile with support for C languages:

cd ~/.vim/bundle/YouCompleteMe
./install.sh --clang-completer

Note: You'll want to have a default .ycm_extra_conf.py that's stored in ~ so that you don't get pesky messages about YCM not having a config file even for projects you don't want YCM active for. copyTo.sh copies the default one that's stored in this folder.

*** Language specific packages

C/C++ 
--
Plugin page: http://www.vim.org/scripts/script.php?script_id=213
Hotkeys: http://lug.fh-swf.de/vim/vim-c/c-hotkeys.pdf

Ruby
--
Ensure that the ruby-lint gem is installed in your core Ruby install.

Tags
--
Ensure exhuberant tags is installed (need it for tagbar). ctags is package name.

evince
--
evince is needed for previewing PDFs (apt-get install evince)

Packages
--
sudo apt-get install ctags evince texlive-full

--

Add javascript auto completion

Ensure npm and nodejs are installed.

Do plugininstall (to install ternjs/tern_for_vim', then go to ~/.vim/bundle/tern and run npm install. This will install tern.

Ensure that within your folder you have a .tern-project file, here's one for a node app:

{
	"libs":["jquery", "browser"],

	"plugins": {
	"node": {}
	}

}

Here is a more complete tern project file

{
  "defs": [
    "browser",
    "ecma5",
    "ecma6"
  ]
}

--

Add javascript linting/hinting

Run sudo npm install -g jshint

Should work with syntastic right out of the box.

-- 

Fix python auto complete when using venv

Found this post:

https://github.com/davidhalter/jedi-vim/issues/31

if has('python')
py << EOF
import os.path
import sys
import vim
if 'VIRTUAL_ENV' in os.environ:
    project_base_dir = os.environ['VIRTUAL_ENV']
    sys.path.insert(0, project_base_dir)
    activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
    execfile(activate_this, dict(__file__=activate_this))
EOF
endif

Above has to go into .vimrc (not into the python ftplugin file). Already have it in there, but also dumping it here given how important it is.

-- 

neovim

Install it from unstable ppa: https://github.com/neovim/neovim/wiki/Installing-Neovim

Symlink your vim config to neovim

To start the transition, link your previous configuration so Nvim can use
it:

mkdir -p ${XDG_CONFIG_HOME:=$HOME/.config}; ln -s ~/.vim $XDG_CONFIG_HOME/nvim; ln -s ~/.vimrc $XDG_CONFIG_HOME/nvim/init.vim

add python support for nvim:

pip install neovim

***** Misc fixes

*Tern

- Make sure you have tern installed system wide. Also go into ~/.vim/bundle/tern_for_vim and run npm install
